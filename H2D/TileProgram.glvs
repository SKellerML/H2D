#version 330

uniform mat4 ProjectionMatrix, ModelViewMatrix;

layout(location=0) in vec2 vertex;	// Vec 4 to store tex Coords too?
layout(location=1) in vec2 textureCoord;

out vec2 texCoord;

out vec4 gl_Position;

void main() {
	

	texCoord=textureCoord;

	gl_Position = ProjectionMatrix * ModelViewMatrix * vec4(vertex.x,vertex.y,0.0,1.0); 

}

/*	Sprite Sheet


//http://stackoverflow.com/questions/9609423/applying-part-of-a-texture-sprite-sheet-texture-map-to-a-point-sprite-in-ios
uniform mat4 Projection;
uniform mat4 Modelview;
// The radius of the point in OpenGL units, eg: "20.0"
uniform float PointSize;
// The size of the sprite being rendered. My sprites are square
// so I'm just passing in a float.  For non-square sprites pass in
// the width and height as a vec2.
uniform float TextureCoordPointSize;

attribute vec4 Position;
attribute vec4 ObjectCenter;
// The top left corner of a given sprite in the sprite-sheet
attribute vec2 TextureCoordIn;

varying vec2 TextureCoord;
varying vec2 TextureSize;

void main(void)
{
    gl_Position = Projection * Modelview * Position;
    TextureCoord = TextureCoordIn;
    TextureSize = vec2(TextureCoordPointSize, TextureCoordPointSize);

    // This is optional, it is a quick and dirty way to make the points stay the same
    // size on the screen regardless of distance.
    gl_PointSize = PointSize / Position.w;
}

*/